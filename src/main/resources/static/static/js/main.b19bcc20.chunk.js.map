{"version":3,"sources":["components/services/auth.service.js","components/authentication/LogOut.js","components/Navigationbar.js","components/Home.js","components/Toasts/ToastSupp.js","components/Toasts/ToastAjout.js","components/Projet/ProjetList.js","components/Toasts/ToastModif.js","components/Projet/ProjetModif.js","components/Encadrant/EncadrantsList.js","components/Encadrant/updateEncadrant.js","components/Etudiant/EtudiantList.js","components/Etudiant/UpdateEtudiant.js","components/Groupe/GroupesList.js","components/Groupe/updateGroupe.js","components/Groupe/addEtudiantGroupe.js","components/PageNotFound.js","components/authentication/Dashboard.js","components/authentication/Login.js","components/authentication/form-hook.js","components/authentication/Button.js","components/util/validators.js","components/authentication/Input.js","components/authentication/Register.js","components/authentication/Profile.js","components/services/auth-header.js","components/services/user.service.js","components/authentication/BoardUser.js","components/authentication/BoardModerator.js","components/authentication/BoardAdmin.js","App.js","serviceWorker.js","index.js"],"names":["username","password","axios","post","role","then","response","data","jwttoken","localStorage","setItem","JSON","stringify","console","log","getItem","removeItem","parse","LogOut","event","AuthService","Navbar","bg","variant","to","pathname","size","style","onClick","this","icon","faSignOutAlt","Component","Navigationbar","className","React","Home","Jumbotron","ToastSupp","props","children","show","position","top","left","zIndex","boxShadow","Toast","type","Header","closeButton","Body","message","ToastAjout","right","currUser","token","ProjetList","initialState","Titre","Description","Theme","Duree","Technologies","ProjetSupp","projetId","delete","headers","setState","setTimeout","projets","state","filter","projet","id","isToggleOn","projetChange","bind","ajoutProjet","handleClick","get","res","isLoaded","redirectToReferrer","history","push","preventDefault","titre","description","theme","duree","technologies","window","location","reload","target","name","value","faList","faPlus","showSuppToast","Card","showAddToast","Form","onSubmit","Row","Group","as","Col","controlId","Label","Control","autoComplete","required","onChange","placeholder","rows","Footer","Table","bordered","hover","striped","length","align","colSpan","map","key","ButtonGroup","faEdit","faTrash","ToastModif","ProjetModif","modifProjet","match","params","patch","showModifToast","EncadrantsList","Nom","Prenom","Role","Departement","deleteEncadrant","encadrantId","Encadrants","encadrant","currentuser","encadrantChange","ajoutEncadrant","nom","prenom","departement","EncadrantModif","updateEncadrant","error","EtudiantsList","Cne","Filiere","GroupKey","EncadrantId","ProjectId","deleteEtudiant","etudiantId","Etudiants","etudiant","etudiantChange","ajoutEtudiant","cne","filiere","groupkey","projectId","EtudiantModif","groupKey","updateEtudiant","GroupesList","deleteGroupe","groupeId","Groupes","groupe","groupeChange","ajoutGroupe","faUserPlus","updateGroupe","addEtudiantGroupe","handleChange","ajoutEtudiantGroupe","fetch","json","responseData","catch","err","alert","PageNotFound","dashboard","clear","href","handleLogout","color","Login","History","useHistory","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","setMessage","src","alt","e","current","validateAll","context","_errors","resMessage","toString","ref","htmlFor","autoFocus","validations","disabled","display","formReducer","action","formIsValid","inputId","inputs","isValid","Button","inverse","danger","exact","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MINLENGTHPASS","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_MAX","VALIDATOR_TYPE_EMAIL","VALIDATOR_TYPE_PASSWORD_MATCH","VALIDATOR_TYPE_USERNAME_MATCH","VALIDATOR_REQUIRE","VALIDATOR_PASSWORD_MATCH","val","pass","usernames","validate","validators","validator","trim","test","inputReducer","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","touchHandler","changeHander","onInput","useEffect","element","onBlur","label","errorText","NewPlace","setShow","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useForm","email","rePassword","inputHandler","getPassValue","document","getElementById","Profile","currentUser","accessToken","roles","index","authHeader","user","Authorization","API_URL","BoardUser","content","setContent","UserService","_content","BoardModerator","BoardAdmin","App","Container","lg","marginTop","path","component","Dashboard","Register","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b19bcc20.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"https://miolaproject.herokuapp.com/authenticate\";\n\nconst register = (username, password) => {\n  return axios.post(\"https://miolaproject.herokuapp.com/register\", {\n    username,\n    password,\n    role:\"user\"\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL , {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.jwttoken) {\n        localStorage.setItem(\"user\", JSON.stringify(response));\n        console.log(\"llocal storage \"+localStorage.getItem(\"user\"));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nexport default {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n};\n","import React, { Component } from 'react'\nimport { Button, Navbar} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport AuthService from \"../services/auth.service\";\nimport { Link } from 'react-router-dom';\n\n\nclass LogOut extends Component {\n\n    LogOut = (event) =>\n    {\n        AuthService.logout();\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg=\"light\" variant=\"light\">\n                    <Link to={{ pathname: `/login`}}><Button size=\"sm\" style={{\"right\":\"50px\",\"display\":\"block\"}} onClick={this.LogOut} variant=\"outline-danger\"> <FontAwesomeIcon icon={faSignOutAlt} />Deconnexion</Button> </Link>\n                </Navbar>\n            </div>\n        )\n    }\n}\nexport default LogOut;\n","import React from 'react';\nimport {Navbar} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport LogOut from './authentication/LogOut';\n\nclass Navigationbar extends React.Component {\n \n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-10\">\n                        <Navbar bg=\"dark\" variant=\"dark\">\n                            <Link to={\"/home\"} className=\"nav-link\">Home</Link>\n                            <Link to={\"/projet\"} className=\"nav-link\">Projets</Link>\n                            <Link to={\"/encadrant\"} className=\"nav-link\">Encadrants</Link>\n                            <Link to={\"/etudiant\"} className=\"nav-link\">Etudiants</Link>\n                            <Link to={\"/groupe\"} className=\"nav-link\">Groupes</Link>\n                            <Link to={\"/seance\"} className=\"nav-link\">Séances d'encadrements</Link>\n                        </Navbar>\n                    </div>\n                    <div className=\"col-sm-2\">\n                        <LogOut/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Navigationbar;","import React from 'react';\nimport {Jumbotron} from 'react-bootstrap';\nimport NavigationBar from './Navigationbar';\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <br/>\n                <Jumbotron className=\"bg-dark text-white\">\n                    <h1>Bienvenue dans le projet MiolaProjects</h1>\n                    <blockquote className= \"blockquote mb-0\">\n                        <p>Gérer les projets de vos étudiants de A-Z</p>\n                        <footer className=\"blockquote-footer\">Master MIOLA</footer>\n                    </blockquote>\n                </Jumbotron>\n            </div>\n           \n        );\n    }\n}\nexport default Home;","import React, {Component} from 'react';\nimport {Toast} from 'react-bootstrap';\n\nclass ToastSupp extends Component {\n\nrender() {\n    const toastCss = {\n    position: 'fixed',\n    top: '20px',\n    left: '20px',\n    zIndex:'1',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' };\n\n    return (\n    <div style={this.props.children.show ? toastCss : null}>\n        <Toast className={`border text-white ${this.props.children.type === \"success\" ? \"border-success bg-success\" : \"border-danger bg-danger\"}`} show={this.props.children.show}>\n            <Toast.Header className={`text-white ${this.props.children.type === \"danger\" ? \"bg-danger\" : \"bg-danger\"}`} closeButton={false}>\n            <strong className=\"mr-auto\">Success</strong>\n            </Toast.Header>\n            <Toast.Body>\n            {this.props.children.message}\n            </Toast.Body>\n        </Toast>\n    </div>\n    ); \n};\n}\nexport default ToastSupp;","import React, {Component} from 'react';\nimport {Toast} from 'react-bootstrap';\n\nclass ToastAjout extends Component {\n\nrender() {\n    const toastCss = {\n    position: 'fixed',\n    top: '20px',\n    right: '20px',\n    zIndex:'1',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' };\n\n    return (\n    <div style={this.props.children.show ? toastCss : null}>\n        <Toast className={`border text-white ${this.props.children.type === \"success\" ? \"border-success bg-success\" : \"border-danger bg-danger\"}`} show={this.props.children.show}>\n            <Toast.Header className={`text-white ${this.props.children.type === \"success\" ? \"bg-success\" : \"bg-danger\"}`} closeButton={false}>\n            <strong className=\"mr-auto\">Success</strong>\n            </Toast.Header>\n            <Toast.Body>\n            {this.props.children.message}\n            </Toast.Body>\n        </Toast>\n    </div>\n    ); \n};\n}\nexport default ToastAjout;","import React, { Component } from 'react';\nimport { ButtonGroup, Button, Card, Table, Form, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport { faList, faEdit, faTrash,faPlus } from '@fortawesome/free-solid-svg-icons';\nimport {Jumbotron} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport ToastSupp from '../Toasts/ToastSupp';\nimport ToastAjout from '../Toasts/ToastAjout';\nimport Navigationbar from '../Navigationbar';\nimport axios from 'axios';\nimport AuthService from \"../services/auth.service\";\n\n\n\nconst currUser  = AuthService.getCurrentUser();\nvar token = \"\";\nif(currUser) { token = currUser.data.jwttoken; }\n\n\nclass ProjetList extends Component {\n  \n    initialState = \n    {\n        Titre:' ',\n        Description:' ',\n        Theme:' ',\n        Duree:' ',\n        Technologies: ' '\n    };\n\n    constructor(props) \n    {\n        super(props);\n        this.state = { projets: [], isToggleOn: false};\n\n        this.projetChange = this.projetChange.bind(this);\n        this.ajoutProjet = this.ajoutProjet.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.setState(state => ({\n          isToggleOn: !this.state.isToggleOn\n        }));        \n      }\n\n    componentDidMount() \n    {   \n        console.log(token)\n\n        if(token !== \"\") \n        {\n            const api = `https://miolaproject.herokuapp.com/projets`;\n            axios.get(api, { headers: {\"Authorization\" : `Bearer ${token}`} })\n            .then(res => {\n                console.log(res.data);\n                this.setState({\n                projets: res.data,  \n                isLoaded : true,\n                redirectToReferrer: false})\n            })\n        }\n        else { this.props.history.push('/login') }\n        \n    }   \n\n    \n    ajoutProjet(event) {\n        event.preventDefault();\n        const projet= {\n            titre:this.state.titre,\n            description:this.state.description,\n            theme:this.state.theme,\n            duree:this.state.duree,\n            technologies:this.state.technologies\n        }\n\n        axios.post(\"https://miolaproject.herokuapp.com/projets\", projet, { headers: {\"Authorization\" : `Bearer ${token}`} })\n        .then(response => {\n            if (response.data != null) \n            {\n                this.setState(this.initialState);\n                this.setState({\"showAddToast\":true});\n                setTimeout(() => this.setState({\"showAddToast\":false}), 1000);\n                setTimeout(() =>  window.location.reload(false), 1000);\n            }\n        })\n    }\n\n    ProjetSupp = (projetId) => { \n        axios.delete(\"https://miolaproject.herokuapp.com/projets/\"+projetId, { headers: {\"Authorization\" : `Bearer ${token}`} })\n        .then(response => \n        {\n            if(response.data != null)\n            {\n                this.setState({\"showSuppToast\":true});\n                setTimeout(() => this.setState({\"showSuppToast\":false}), 1000);\n                this.setState({ projets:this.state.projets.filter(projet => projet.id !== projetId) });\n            }\n            else {this.setState({\"showSuppToast\":false});}\n        });  \n    };\n\n\n    projetChange(event) \n    {\n        this.setState ({ [event.target.name] : event.target.value });\n    }\n\n\n//******************    View    *******************/\n\n    render() {\n        return (\n            <div>\n                <Navigationbar/>\n                <br/>\n                <Jumbotron className=\"bg-dark text-white\">\n                    \n\n                    {/*  Titre + Button d'ajout d'un nouveau projet */}\n            \n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-9\">\n                            <h1><FontAwesomeIcon icon={faList} /> Liste des projets</h1>\n                                <blockquote className= \"blockquote mb-0\">\n                                    <p>Vous trouverez la liste des projets existants </p>\n\n                                </blockquote>\n                            </div>\n                            <div className=\"col-sm-3\">\n                            <Button size=\"lg\" variant=\"outline-success\" onClick={this.handleClick}> <FontAwesomeIcon icon={faPlus} /> Ajouter un projet</Button> \n                            </div>\n                        </div>\n                    </div>\n            \n                    {/*  Toast Suppression */}\n            \n                    <div style={{\"display\":this.state.showSuppToast ? \"block\" : \"none\"}}>\n                        <ToastSupp children = {{showSuppToast:this.state.showSuppToast, message:\"Projet supprimé\",type:\"danger\"}}/> \n                    </div>\n            \n                    {/*  Formulaire d'ajout d'un nouveau projet */}\n            \n                        <div className=\"FormAjout\" style={{\"display\":this.state.isToggleOn ? \"block\" : \"none\"}}>\n            \n                        <Card className={\"border border-dark bg-dark text-white\"}>\n            \n                            <Card.Header> Ajouter une projet </Card.Header>\n            \n                            <div style={{\"display\":this.state.showAddToast ? \"block\" : \"none\"}}>\n                            <ToastAjout children = {{showAddToast:this.state.showAddToast, message:\"Projet ajouté avec succès.\",type:\"success\"}}/> \n                            </div>\n            \n                            <Form onSubmit={this.ajoutProjet} id=\"ProjetFormId\">\n            \n                            <Card.Body>\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridTitre\">\n                                    <Form.Label> Titre </Form.Label>\n                                    <Form.Control name=\"titre\" autoComplete=\"off\" required type=\"text\"\n                                    className={\"bg-dark text-white\"}\n                                    value = {this.state.titre} onChange = {this.projetChange} placeholder= \"Entrez Titre Projet\"/>\n                                    </Form.Group>\n            \n                                    <Form.Group as={Col} controlId=\"formGridTheme\">\n                                    <Form.Label> Thème </Form.Label>\n                                    <Form.Control name=\"theme\" autoComplete=\"off\" required type=\"text\"\n                                    className={\"bg-dark text-white\"}\n                                    value = {this.state.theme} onChange = {this.projetChange} placeholder= \"Entrez Thème Projet\"/>\n                                    </Form.Group>\n                                </Form.Row>\n            \n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridDescription\">\n                                    <Form.Label> Description </Form.Label>\n                                    <Form.Control name=\"description\" autoComplete=\"off\" required type=\"textarea\"\n                                    className={\"bg-dark text-white\"} as=\"textarea\" rows=\"3\"\n                                    value = {this.state.description} onChange = {this.projetChange} placeholder= \"Entrez Description Projet\"/>\n                                    </Form.Group>\n                                </Form.Row>\n            \n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridDuree\">\n                                    <Form.Label> Durée </Form.Label>\n                                    <Form.Control name=\"duree\" autoComplete=\"off\" required type=\"text\"\n                                    className={\"bg-dark text-white\"}\n                                    value = {this.state.duree} onChange = {this.projetChange} placeholder= \"Entrez Durée Projet\"/>\n                                    </Form.Group>\n            \n                                    <Form.Group as={Col} controlId=\"formGridTechnologies\">\n                                    <Form.Label> Technologies </Form.Label>\n                                    <Form.Control name=\"technologies\" autoComplete=\"off\"  type=\"text\"\n                                    className={\"bg-dark text-white\"}\n                                    value = {this.state.technologies} onChange = {this.projetChange} placeholder= \"Entrez Technologies Projet\"/>\n                                    </Form.Group>\n                                </Form.Row>\n            \n                            </Card.Body>\n            \n                            <Card.Footer style={{\"textAlign\":\"center\"}}>\n                                <Button size=\"lm\" variant=\"success\" type=\"submit\"> Ajouter </Button>\n                            </Card.Footer>\n                            </Form>\n                            </Card>\n            \n                        </div>\n            \n                    \n                    {/*  Liste des projets existants dans la base de données */}\n            \n                    <Card className={\"border border-dark bg-dark text-white\"}> \n                        <Card.Body>\n                            <Table bordered hover striped variant=\"dark\">\n                                <thead> \n                                    <tr><th>Titre</th><th>Description</th><th>Durée</th><th>Thème</th><th>Technologies</th></tr>\n                                </thead>\n            \n                                <tbody>\n            \n                                { \n                                    /* If there is no project, show \"Aucun projet existant\" */\n                                    this.state.projets.length ===0 ? <tr align=\"center\"><td colSpan=\"6\">Aucun projet existant.</td></tr> :\n                                    \n                                    /* else, we should fetch the data from the API */\n                                    this.state.projets.map((projet) => ( \n                                        <tr key={projet.id}>\n                                            <td>{projet.titre}</td>\n                                            <td>{projet.description}</td>\n                                            <td>{projet.duree}</td>\n                                            <td>{projet.theme}</td>\n                                            <td>{projet.technologies}</td>\n                                            <td>\n                                                <ButtonGroup>\n                                                <Link to={{ pathname: `/projet/modif/${projet.id}`}} className=\"nav-link\">\n                                                    <Button size=\"sm\" variant=\"outline-primary\"><FontAwesomeIcon icon={faEdit}/> </Button>\n                                                </Link>\n                                                <Button size=\"sm\" variant=\"outline-danger\" onClick={this.ProjetSupp.bind(this,projet.id)}> <FontAwesomeIcon icon={faTrash} /> </Button> \n                                                </ButtonGroup>\n                                            </td>\n                                        </tr>\n                                    ))\n                                }\n            \n                                </tbody>\n            \n                            </Table>\n                        </Card.Body>\n                    </Card>\n                   \n                </Jumbotron>\n            </div>\n    \n        )\n    }\n}\n\nexport default ProjetList;","import React, {Component} from 'react';\nimport {Toast} from 'react-bootstrap';\n\nclass ToastModif extends Component {\n\nrender() {\n    const toastCss = {\n    position: 'fixed',\n    top: '20px',\n    right: '20px',\n    zIndex:'1',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' };\n\n    return (\n    <div style={this.props.children.show ? toastCss : null}>\n        <Toast className={`border text-white ${this.props.children.type === \"success\" ? \"border-success bg-success\" : \"border-danger bg-danger\"}`} show={this.props.children.show}>\n            <Toast.Header className={`text-white ${this.props.children.type === \"success\" ? \"bg-success\" : \"bg-danger\"}`} closeButton={false}>\n            <strong className=\"mr-auto\">Success</strong>\n            </Toast.Header>\n            <Toast.Body>\n            {this.props.children.message}\n            </Toast.Body>\n        </Toast>\n    </div>\n    ); \n};\n}\nexport default ToastModif;","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport {  faEdit } from '@fortawesome/free-solid-svg-icons';\nimport {Jumbotron} from 'react-bootstrap';\nimport {  Button, Card, Form, Col } from 'react-bootstrap';\nimport ToastModif from '../Toasts/ToastModif';\nimport axios from 'axios';\nimport AuthService from \"../services/auth.service\";\n\n\n\nconst currUser  = AuthService.getCurrentUser();\nvar token = \"\";\nif(currUser) { token = currUser.data.jwttoken; }  \n\nclass ProjetModif extends Component {\n\n    async componentDidMount() \n    {\n        if(token !== \"\") \n        {\n            const id = this.props.match.params.id;\n\n            const res = await axios.get('https://miolaproject.herokuapp.com/projets/'+id, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            \n            console.log(res.data.titre)\n\n            this.setState({\n                id: id,\n                titre : res.data.titre,\n                description : res.data.description,\n                theme : res.data.theme,\n                duree : res.data.duree,\n                technologies : res.data.technologies\n            });\n\n        }\n        else {this.props.history.push('/login') }\n\n    }\n\n\n    state = \n    {\n        id: '',\n        titre : '',\n        description : '',\n        theme : '',\n        duree : '',\n        technologies : {}\n    };\n\n    constructor(props) \n    {\n        super(props);\n        this.state = { projet: this.initialState };\n        this.projetChange = this.projetChange.bind(this);\n        this.modifProjet = this.modifProjet.bind(this)\n    }\n\n    projetChange(event) \n    {\n        this.setState ({ [event.target.name] : event.target.value });\n    }\n\n    async modifProjet(event) {\n        \n        event.preventDefault();\n\n        const id = this.props.match.params.id;\n        \n        const projet= {\n\n            id:this.state.id,\n            titre:this.state.titre,\n            description:this.state.description,\n            theme:this.state.theme,\n            duree:this.state.duree,\n            technologies:this.state.technologies\n        }\n\n        await axios.patch(\"https://miolaproject.herokuapp.com/projets/\"+id, projet, { headers: {\"Authorization\" : `Bearer ${token}`} })\n        .then(response => {\n            if (response.data != null) \n            {\n                this.setState(this.initialState);\n                this.setState({\"showModifToast\":true});\n                setTimeout(() => this.setState({\"showModifToast\":false}), 1000);\n                setTimeout(() => this.props.history.push('/projet'), 1000);\n            }\n        })\n        \n        }\n\n    render() {\n        return (\n        <Jumbotron className=\"bg-dark text-white\">\n            <h1><FontAwesomeIcon icon={faEdit} /> Modifier un projet</h1>\n            <blockquote className= \"blockquote mb-0\">\n                <p>Vous pouvez changer les informations que vous voulez et sauvegarder</p>\n            </blockquote>\n\n            <Card className={\"border border-dark bg-dark text-white\"}>\n\n                <div style={{\"display\":this.state.showModifToast ? \"block\" : \"none\"}}>\n                <ToastModif children = {{showModifToast:this.state.showModifToast, message:\"Projet modifié avec succès.\",type:\"success\"}}/> \n                </div>\n\n                <Form onSubmit={this.modifProjet} id=\"ProjetFormId\">\n\n                <Card.Body>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridTitre\">\n                        <Form.Label> Titre </Form.Label>\n                        <Form.Control name=\"titre\" autoComplete=\"off\" required type=\"text\"\n                        className={\"bg-dark text-white\"}\n                        value = {this.state.titre} onChange = {this.projetChange} placeholder= \"Entrez Titre Projet\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridTheme\">\n                        <Form.Label> Thème </Form.Label>\n                        <Form.Control name=\"theme\" autoComplete=\"off\" required type=\"text\"\n                        className={\"bg-dark text-white\"}\n                        value = {this.state.theme} onChange = {this.projetChange} placeholder= \"Entrez Thème Projet\"/>\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridDescription\">\n                        <Form.Label> Description </Form.Label>\n                        <Form.Control name=\"description\" autoComplete=\"off\" required type=\"textarea\"\n                        className={\"bg-dark text-white\"} as=\"textarea\" rows=\"3\"\n                        value = {this.state.description} onChange = {this.projetChange} placeholder= \"Entrez Description Projet\"/>\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridDuree\">\n                        <Form.Label> Durée </Form.Label>\n                        <Form.Control name=\"duree\" autoComplete=\"off\" required type=\"text\"\n                        className={\"bg-dark text-white\"}\n                        value = {this.state.duree} onChange = {this.projetChange} placeholder= \"Entrez Durée Projet\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridTechnologies\">\n                        <Form.Label> Technologies </Form.Label>\n                        <Form.Control name=\"technologies\" autoComplete=\"off\"  type=\"text\"\n                        className={\"bg-dark text-white\"}\n                        value = {this.state.technologies} onChange = {this.projetChange} placeholder= \"Entrez Technologies Projet\"/>\n                        </Form.Group>\n                    </Form.Row>\n\n                </Card.Body>\n\n                <Card.Footer style={{\"textAlign\":\"center\"}}>\n                    <Button size=\"lm\" variant=\"primary\" type=\"submit\"> Modifier </Button>\n                </Card.Footer>\n                </Form>\n                </Card>\n        </Jumbotron>\n        )\n    }\n}\nexport default ProjetModif;\n","import React, { Component } from \"react\";\nimport { ButtonGroup, Button, Card, Table ,Form, Col} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList, faEdit, faTrash,faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport ToastSupp from \"../Toasts/ToastSupp\";\nimport { Link } from \"react-router-dom\";\nimport {Jumbotron} from 'react-bootstrap';\nimport ToastAjout from '../Toasts/ToastAjout';\nimport NavigationBar from '../Navigationbar';\nimport AuthService from '../services/auth.service'\n\n\nconst currUser  = AuthService.getCurrentUser();\nvar token = \"\";\nif(currUser) { token = currUser.data.jwttoken; }  \n\nclass EncadrantsList extends Component {\n\n  initialState = \n    {\n        Nom:' ',\n        Prenom:' ',\n        Role:' ',\n        Departement:' '\n    };\n\n  constructor(props) {\n    super(props);\n    this.state = { Encadrants: [] , isToggleOn: false, currentuser: AuthService.getCurrentUser()};\n\n    this.encadrantChange = this.encadrantChange.bind(this);\n    this.ajoutEncadrant = this.ajoutEncadrant.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() \n  {   \n      if(token !== \"\") \n      {\n        const api = `https://miolaproject.herokuapp.com/encadrants`\n        axios.get(api, { headers: {\"Authorization\" : `Bearer ${token}`} })\n        .then(res => {\n            console.log(res.data);\n            this.setState({\n            Encadrants: res.data,  \n            isLoaded : true,\n            redirectToReferrer: false})\n        })\n    }\n    else {this.props.history.push('/login')}\n  }\n\n  deleteEncadrant = (encadrantId) => {\n    axios\n      .delete(\"https://miolaproject.herokuapp.com/encadrants/\" + encadrantId,  { headers: {\"Authorization\" : `Bearer ${token}`} })\n      .then((response) => {\n        if (response.data != null) \n        {\n          this.setState({ showSuppToast: true });\n          setTimeout(() => this.setState({ showSuppToast: false }), 1000);\n          this.setState({ Encadrants: this.state.Encadrants.filter((encadrant) => encadrant.id !== encadrantId)});\n        } \n        else { this.setState({ showSuppToast: false }); }\n      });\n  };\n\n  ajoutEncadrant(event) {\n    event.preventDefault();\n\n    const encadrant= {\n        nom:this.state.nom,\n        prenom:this.state.prenom,\n        role:this.state.role,\n        departement:this.state.departement\n    }\n\n    axios.post(\"https://miolaproject.herokuapp.com/encadrants\", encadrant ,  { headers: {\"Authorization\" : `Bearer ${token}`} })\n    .then(response => {\n        if (response.data != null) \n        {\n            this.setState(this.initialState);\n            this.setState({\"showAddToast\":true});\n            setTimeout(() => this.setState({\"showAddToast\":false}), 1000);\n            setTimeout(() =>  window.location.reload(false), 1000);\n        }\n    })\n    }\n  \n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !this.state.isToggleOn\n    }));        \n  }\n\n  encadrantChange(event) { this.setState ({ [event.target.name] : event.target.value }); }\n\n\n  render () {\n    return (\n      <div>\n          <NavigationBar/>\n          <br/>\n          <Jumbotron className=\"bg-dark text-white\">\n\n          {/*  Titre + Button d'ajout d'un nouveau encadrant */}\n\n          <div className=\"container\">\n              <div className=\"row\">\n                  <div className=\"col-sm-8\">\n                      <h1><FontAwesomeIcon icon={faList} /> Liste des encadrants</h1>\n                      <blockquote className= \"blockquote mb-0\">\n                          <p>Vous trouverez la liste des encadrants existants</p>\n                      </blockquote>\n                  </div>\n                  <div className=\"col-sm-4\">\n                  <Button size=\"lg\" variant=\"outline-success\" onClick={this.handleClick}> <FontAwesomeIcon icon={faPlus} /> Ajouter un encadrant</Button> \n                  </div>\n              </div>\n          </div>\n\n          {/*  Toast Suppression */}\n\n          <div style={{\"display\":this.state.showSuppToast ? \"block\" : \"none\"}}>\n              <ToastSupp children = {{showSuppToast:this.state.showSuppToast, message:\"Encadrant supprimé\",type:\"danger\"}}/> \n          </div>\n\n          {/*  Formulaire d'ajout d'un nouveau encadrant */}\n\n              <div className=\"FormAjout\" style={{\"display\":this.state.isToggleOn ? \"block\" : \"none\"}}>\n\n              <Card className={\"border border-dark bg-dark text-white\"}>\n\n                  <Card.Header> Ajouter un encadrant </Card.Header>\n\n                  <div style={{\"display\":this.state.showAddToast ? \"block\" : \"none\"}}>\n                  <ToastAjout children = {{showAddToast:this.state.showAddToast, message:\"Encadrant ajouté avec succès.\",type:\"success\"}}/> \n                  </div>\n\n                  <Form onSubmit={this.ajoutEncadrant} id=\"EncadrantFormId\">\n\n                  <Card.Body>\n                      <Form.Row>\n                          <Form.Group as={Col} controlId=\"formGridNom\">\n                          <Form.Label> Nom </Form.Label>\n                          <Form.Control name=\"nom\" autoComplete=\"off\" required type=\"text\"\n                          className={\"bg-dark text-white\"}\n                          value = {this.state.nom} onChange = {this.encadrantChange} placeholder= \"Entrez Nom Encadrant\"/>\n                          </Form.Group>\n\n                          <Form.Group as={Col} controlId=\"formGridPrenom\">\n                          <Form.Label> Prenom </Form.Label>\n                          <Form.Control name=\"prenom\" autoComplete=\"off\" required type=\"text\"\n                          className={\"bg-dark text-white\"}\n                          value = {this.state.prenom} onChange = {this.encadrantChange} placeholder= \"Entrez Prenom Encadrant\"/>\n                          </Form.Group>\n                      </Form.Row>\n\n                      <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridRole\">\n                          <Form.Label> Rôle </Form.Label>\n                          <Form.Control name=\"role\" autoComplete=\"off\" required type=\"text\"\n                          className={\"bg-dark text-white\"}\n                          value = {this.state.role} onChange = {this.encadrantChange} placeholder= \"Entrez Rôle Encadrant\"/>\n                          </Form.Group>\n\n                          <Form.Group as={Col} controlId=\"formGridDepartement\">\n                          <Form.Label> Département </Form.Label>\n                          <Form.Control name=\"departement\" autoComplete=\"off\" required type=\"text\"\n                          className={\"bg-dark text-white\"}\n                          value = {this.state.departement} onChange = {this.encadrantChange} placeholder= \"Entrez Département Encadrant\"/>\n                          </Form.Group>\n                      </Form.Row>\n\n                  </Card.Body>\n\n                  <Card.Footer style={{\"textAlign\":\"center\"}}>\n                      <Button size=\"lm\" variant=\"success\" type=\"submit\"> Ajouter </Button>\n                  </Card.Footer>\n                  </Form>\n                  </Card>\n\n              </div>\n\n\n          {/*  Liste des encadrants existants dans la base de données */}\n\n          <Card className={\"border border-dark bg-dark text-white\"}> \n              <Card.Body>\n                  <Table bordered hover striped variant=\"dark\">\n                      <thead> \n                          <tr><th>Nom</th><th>Prenom</th><th>Role</th><th>Departement</th></tr>\n                      </thead>\n\n                      <tbody>\n\n                      { \n                          /* If there is no encadrant, show \"Aucun encadrant existant\" */\n                          this.state.Encadrants.length ===0 ? <tr align=\"center\"><td colSpan=\"6\">Aucun encadrant existant.</td></tr> :\n                          \n                          /* else, we should fetch the data from the API */\n                          this.state.Encadrants.map((encadrant) => ( \n                            <tr key={encadrant.id}>\n                                <td>{encadrant.nom}</td>\n                                <td>{encadrant.prenom}</td>\n                                <td>{encadrant.role}</td>\n                                <td>{encadrant.departement}</td>\n                                <td>\n                                      <ButtonGroup>\n                                      <Link to={{ pathname: `/encadrant/modif/${encadrant.id}`}} className=\"nav-link\">\n                                          <Button size=\"sm\" variant=\"outline-primary\"><FontAwesomeIcon icon={faEdit}/> </Button>\n                                      </Link>\n                                      <Button size=\"sm\" variant=\"outline-danger\" onClick={this.deleteEncadrant.bind(this,encadrant.id)}> <FontAwesomeIcon icon={faTrash} /> </Button> \n                                      </ButtonGroup>\n                                  </td>\n                              </tr>\n                          ))\n                      }\n\n                      </tbody>\n\n                  </Table>\n              </Card.Body>\n          </Card>\n\n          </Jumbotron>\n      </div>\n    \n    )}\n}\nexport default EncadrantsList;\n","import React, { Component } from 'react'\nimport { Card, Form, Col , Button} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport {  faEdit } from '@fortawesome/free-solid-svg-icons';\nimport {Jumbotron} from 'react-bootstrap';\nimport axios from 'axios'\nimport ToastModif from '../Toasts/ToastModif';\nimport NavigationBar from '../Navigationbar';\nimport AuthService from '../services/auth.service'\n\n\nconst currUser  = AuthService.getCurrentUser();\nvar token = \"\";\nif(currUser) { token = currUser.data.jwttoken; }  \n\nclass EncadrantModif extends Component {\n   \n    async componentDidMount() \n    {\n        if(token !== \"\") \n        {\n            const id = this.props.match.params.id;\n\n            const res = await axios.get('https://miolaproject.herokuapp.com/encadrants/'+id , { headers: {\"Authorization\" : `Bearer ${token}`} });\n            \n            console.log(res.data.nom)\n\n            this.setState({\n                id: id,\n                nom : res.data.nom,\n                prenom : res.data.prenom,\n                role : res.data.role,\n                departement : res.data.departement\n            });\n        }\n        else {this.props.history.push('/login') }\n    }\n\n\n    state = \n    {\n        id:'',\n        nom:'',\n        prenom:'',\n        role:'',\n        departement:''\n    };\n\n    constructor(props) \n    {\n        super(props);\n        this.state = { encadrant: this.initialState };\n        this.encadrantChange = this.encadrantChange.bind(this);\n        this.updateEncadrant = this.updateEncadrant.bind(this)\n    }\n\n    encadrantChange(event) \n    {\n        this.setState ({ [event.target.name] : event.target.value });\n    }\n\n    async updateEncadrant(event) {\n        \n        event.preventDefault();\n\n        const id = this.props.match.params.id;\n        \n        const encadrant= {\n            id:this.state.id,\n            nom:this.state.nom,\n            prenom:this.state.prenom,\n            role:this.state.role,\n            departement:this.state.departement\n        }\n\n        await axios.patch(\"https://miolaproject.herokuapp.com/encadrants/\"+id, encadrant, { headers: {\"Authorization\" : `Bearer ${token}`} })\n        .then(response => {\n            if (response.data != null) \n            {\n                this.setState(this.initialState);\n                this.setState({\"showModifToast\":true});\n                setTimeout(() => this.setState({\"showModifToast\":false}), 1000);\n                setTimeout(() => this.props.history.push('/encadrant'), 1000);\n            }\n            else {console.error(\"Error\");}\n        })\n        \n        }\n\n    render(){\n\n        return(\n            <div>\n                <NavigationBar/>\n                <br/>\n                <Jumbotron className=\"bg-dark text-white\">\n            <h1><FontAwesomeIcon icon={faEdit} /> Modifier un encadrant</h1>\n            <blockquote className= \"blockquote mb-0\">\n                <p>Vous pouvez changer les informations que vous voulez et sauvegarder</p>\n            </blockquote>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n\n                    <div style={{\"display\":this.state.showModifToast ? \"block\" : \"none\"}}>\n                    <ToastModif children = {{showModifToast:this.state.showModifToast, message:\"Encadrant modifié avec succès.\",type:\"success\"}}/> \n                    </div>\n\n                    <Form onSubmit={this.updateEncadrant} id=\"EncadrantFormId\">\n\n                    <Card.Body>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridNom\">\n                        <Form.Label> Nom </Form.Label>\n                        <Form.Control name=\"nom\" autoComplete=\"off\" required type=\"text\"\n                        className={\"bg-dark text-white\"}\n                        value = {this.state.nom} onChange = {this.encadrantChange} placeholder= \"Entrez Nom Encadrant\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridPrenom\">\n                        <Form.Label> Prenom </Form.Label>\n                        <Form.Control name=\"prenom\" autoComplete=\"off\" required type=\"text\"\n                        className={\"bg-dark text-white\"}\n                        value = {this.state.prenom} onChange = {this.encadrantChange} placeholder= \"Entrez Prenom Encadrant\"/>\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridRole\">\n                        <Form.Label> Rôle </Form.Label>\n                        <Form.Control name=\"role\" autoComplete=\"off\" required type=\"text\"\n                        className={\"bg-dark text-white\"}\n                        value = {this.state.role} onChange = {this.encadrantChange} placeholder= \"Entrez Rôle Encadrant\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridDepartement\">\n                        <Form.Label> Département </Form.Label>\n                        <Form.Control name=\"departement\" autoComplete=\"off\" required type=\"text\"\n                        className={\"bg-dark text-white\"}\n                        value = {this.state.departement} onChange = {this.encadrantChange} placeholder= \"Entrez Département Encadrant\"/>\n                        </Form.Group>\n                    </Form.Row>\n\n                </Card.Body>\n\n                    <Card.Footer style={{\"textAlign\":\"center\"}}>\n                        <Button size=\"lm\" variant=\"primary\" type=\"submit\"> Modifier </Button>\n                    </Card.Footer>\n                </Form>\n                </Card>\n            </Jumbotron>\n            </div>\n            \n);\n}\n}\nexport default  EncadrantModif;","import React, {  Component } from \"react\";\nimport { ButtonGroup, Button, Card, Table, Form, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList, faEdit, faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport {Jumbotron} from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport ToastAjout from '../Toasts/ToastAjout';\nimport ToastSupp from \"../Toasts/ToastSupp\";\nimport NavigationBar from '../Navigationbar';\nimport AuthService from \"../services/auth.service\";\n\n\nconst currUser  = AuthService.getCurrentUser();\nvar token = \"\";\nif(currUser) { token = currUser.data.jwttoken; }  \n\nclass EtudiantsList extends Component \n{\n\n  initialState = \n    {\n        Nom:' ',\n        Prenom:' ',\n        Cne:' ',\n        Filiere:' ',\n        GroupKey:' ',\n        EncadrantId:' ',\n        ProjectId:' '\n    };\n\n  constructor(props) {\n    super(props);\n    this.state = { Etudiants: [] , isToggleOn: false};\n\n    this.etudiantChange = this.etudiantChange.bind(this);\n    this.ajoutEtudiant = this.ajoutEtudiant.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n    componentDidMount() \n    {   \n      console.log(token)\n\n        if(token !== \"\") \n        {\n          const api = `https://miolaproject.herokuapp.com/etudiants`;\n          axios.get(api, { headers: {\"Authorization\" : `Bearer ${token}`} })\n          .then(res => {\n              console.log(res.data);\n              this.setState({\n              Etudiants: res.data,  \n              isLoaded : true,\n              redirectToReferrer: false})\n          })\n        }\n        else {this.props.history.push('/login')}\n    }\n\n  deleteEtudiant = (etudiantId) => {\n    axios\n      .delete(\"https://miolaproject.herokuapp.com/etudiants/\" + etudiantId, { headers: {\"Authorization\" : `Bearer ${token}`} })\n      .then((response) => {\n        if (response.data != null) \n        {\n          this.setState({ showSuppToast: true });\n          setTimeout(() => this.setState({ showSuppToast: false }), 1000);\n          this.setState({ Etudiants: this.state.Etudiants.filter((etudiant) => etudiant.id !== etudiantId)});\n        } \n        else { this.setState({ showSuppToast: false }); }\n      });\n  };\n\n  ajoutEtudiant(event) {\n    event.preventDefault();\n\n    const etudiant= {\n        nom:this.state.nom,\n        prenom:this.state.prenom,\n        cne:this.state.cne,\n        filiere:this.state.filiere,\n        groupkey: \" \",\n        encadrantId: \" \",\n        projectId: \" \"\n    }\n\n    axios.post(\"https://miolaproject.herokuapp.com/etudiants\", etudiant, { headers: {\"Authorization\" : `Bearer ${token}`} })\n    .then(response => {\n        if (response.data != null) \n        {\n            this.setState(this.initialState);\n            this.setState({\"showAddToast\":true});\n            setTimeout(() => this.setState({\"showAddToast\":false}), 1000);\n            setTimeout(() =>  window.location.reload(false), 1000);\n        }\n    })\n    }\n  \n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !this.state.isToggleOn\n    }));        \n  }\n\n  etudiantChange(event) { this.setState ({ [event.target.name] : event.target.value }); }\n\n\n  render () \n  {\n    return (\n      <div>\n        <NavigationBar/>\n                <br/>\n\n        <Jumbotron className=\"bg-dark text-white\">\n\n{/*  Titre + Button d'ajout d'un nouveau encadrant */}\n\n<div className=\"container\">\n    <div className=\"row\">\n        <div className=\"col-sm-9\">\n            <h1><FontAwesomeIcon icon={faList} /> Liste des étudiants</h1>\n            <blockquote className= \"blockquote mb-0\">\n                <p>Vous trouverez la liste des étudiants existants</p>\n            </blockquote>\n        </div>\n        <div className=\"col-sm-3\">\n        <Button size=\"lg\" variant=\"outline-success\" onClick={this.handleClick}> <FontAwesomeIcon icon={faPlus} /> Ajouter un étudiant</Button> \n        </div>\n    </div>\n</div>\n\n{/*  Toast Suppression */}\n\n<div style={{\"display\":this.state.showSuppToast ? \"block\" : \"none\"}}>\n    <ToastSupp children = {{showSuppToast:this.state.showSuppToast, message:\"Etudiant supprimé\",type:\"danger\"}}/> \n</div>\n\n{/*  Formulaire d'ajout d'un nouveau encadrant */}\n\n    <div className=\"FormAjout\" style={{\"display\":this.state.isToggleOn ? \"block\" : \"none\"}}>\n\n    <Card className={\"border border-dark bg-dark text-white\"}>\n\n        <div style={{\"display\":this.state.showAddToast ? \"block\" : \"none\"}}>\n        <ToastAjout children = {{showAddToast:this.state.showAddToast, message:\"Etudiant ajouté avec succès.\",type:\"success\"}}/> \n        </div>\n\n        <Form onSubmit={this.ajoutEtudiant} id=\"EtudiantFormId\">\n\n        <Card.Body>\n           \n          <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridNom\">\n                  <Form.Label> Nom </Form.Label>\n                  <Form.Control name=\"nom\" autoComplete=\"off\" required type=\"text\"\n                  className={\"bg-dark text-white\"}\n                  value = {this.state.nom} onChange = {this.etudiantChange} placeholder= \"Entrez Nom Etudiant\"/>\n                  </Form.Group>\n\n                  <Form.Group as={Col} controlId=\"formGridPrenom\">\n                  <Form.Label> Prenom </Form.Label>\n                  <Form.Control name=\"prenom\" autoComplete=\"off\" required type=\"text\"\n                  className={\"bg-dark text-white\"}\n                  value = {this.state.prenom} onChange = {this.etudiantChange} placeholder= \"Entrez Prenom Etudiant\"/>\n                  </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridCne\">\n                  <Form.Label> CNE </Form.Label>\n                  <Form.Control name=\"cne\" autoComplete=\"off\" required type=\"text\"\n                  className={\"bg-dark text-white\"}\n                  value = {this.state.cne} onChange = {this.etudiantChange} placeholder= \"Entrez CNE Etudiant\"/>\n                  </Form.Group>\n\n                  <Form.Group as={Col} controlId=\"formGridFiliere\">\n                  <Form.Label> Filière </Form.Label>\n                  <Form.Control name=\"filiere\" autoComplete=\"off\" required type=\"text\"\n                  className={\"bg-dark text-white\"}\n                  value = {this.state.filiere} onChange = {this.etudiantChange} placeholder= \"Entrez Filière Etudiant\"/>\n                  </Form.Group>\n            </Form.Row>\n\n        </Card.Body>\n\n        <Card.Footer style={{\"textAlign\":\"center\"}}>\n            <Button size=\"lm\" variant=\"success\" type=\"submit\"> Ajouter </Button>\n        </Card.Footer>\n        </Form>\n        </Card>\n\n    </div>\n\n\n{/*  Liste des encadrants existants dans la base de données */}\n\n<Card className={\"border border-dark bg-dark text-white\"}> \n    <Card.Body>\n        <Table bordered hover striped variant=\"dark\">\n            <thead> \n                <tr><th>Nom</th><th>Prenom</th><th>CNE</th><th>Filière</th></tr>\n            </thead>\n\n            <tbody>\n\n            { \n                /* If there is no encadrant, show \"Aucun encadrant existant\" */\n                this.state.Etudiants.length ===0 ? <tr align=\"center\"><td colSpan=\"6\">Aucun étudiant existant.</td></tr> :\n                \n                /* else, we should fetch the data from the API */\n                this.state.Etudiants.map((etudiant) => ( \n                  <tr key={etudiant.id}>\n                      <td>{etudiant.nom}</td>\n                      <td>{etudiant.prenom}</td>\n                      <td>{etudiant.cne}</td>\n                      <td>{etudiant.filiere}</td>\n                      <td>\n                            <ButtonGroup>\n                            <Link to={{ pathname: `/etudiant/modif/${etudiant.id}`}} className=\"nav-link\">\n                                <Button size=\"sm\" variant=\"outline-primary\"><FontAwesomeIcon icon={faEdit}/> </Button>\n                            </Link>\n                            <Button size=\"sm\" variant=\"outline-danger\" onClick={this.deleteEtudiant.bind(this,etudiant.id)}> <FontAwesomeIcon icon={faTrash} /> </Button> \n                            </ButtonGroup>\n                        </td>\n                    </tr>\n                ))\n            }\n\n            </tbody>\n\n        </Table>\n    </Card.Body>\n</Card>\n\n</Jumbotron>\n      </div>\n    \n    )}\n}\nexport default EtudiantsList;\n","import React, { Component } from 'react'\nimport { Card, Form, Col , Button} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport {  faEdit } from '@fortawesome/free-solid-svg-icons';\nimport {Jumbotron} from 'react-bootstrap';\nimport axios from 'axios'\nimport ToastModif from '../Toasts/ToastModif';\nimport NavigationBar from '../Navigationbar';\n\nimport AuthService from \"../services/auth.service\";\n\n\nconst currUser  = AuthService.getCurrentUser();\nvar token = \"\";\nif(currUser) { token = currUser.data.jwttoken; }  \n\n\nclass EtudiantModif extends Component {\n   \n    async componentDidMount() \n    {\n        if(token !== \"\")\n        {\n            const id = this.props.match.params.id;\n\n            const res = await axios.get('https://miolaproject.herokuapp.com/etudiants/'+id, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            \n            this.setState({\n                id: id,\n                nom : res.data.nom,\n                prenom : res.data.prenom,\n                cne : res.data.cne,\n                filiere : res.data.filiere,\n                groupKey : res.data.groupKey,\n                encadrantId : res.data.encadrantId,\n                projectId : res.data.projectId\n            });\n\n        }\n        else {this.props.history.push('/login') }\n\n    }\n\n\n    state = \n    {\n        id: '',\n        nom :  '',\n        prenom :  '',\n        cne :  '',\n        filiere :  '',\n        groupKey :  '',\n        encadrantId :  '',\n        projectId :  ''\n    };\n\n    constructor(props) \n    {\n        super(props);\n        this.state = { encadrant: this.initialState };\n        this.etudiantChange = this.etudiantChange.bind(this);\n        this.updateEtudiant = this.updateEtudiant.bind(this);\n        \n    }\n\n    etudiantChange(event) \n    {\n        this.setState ({ [event.target.name] : event.target.value });\n    }\n\n    async updateEtudiant(event) {\n        \n        event.preventDefault();\n\n        const id = this.props.match.params.id;\n        \n        const etudiant= {\n            id:this.state.id,\n            nom:this.state.nom,\n            prenom:this.state.prenom,\n            cne:this.state.cne,\n            filiere:this.state.filiere,\n            groupKey : \" \",\n            encadrantId :  \" \",\n            projectId :  \" \"\n        }\n\n        await axios.patch(\"https://miolaproject.herokuapp.com/etudiants/\"+id, etudiant, { headers: {\"Authorization\" : `Bearer ${token}`} })\n        .then(response => {\n            if (response.data != null) \n            {\n                this.setState(this.initialState);\n                this.setState({\"showModifToast\":true});\n                setTimeout(() => this.setState({\"showModifToast\":false}), 1000);\n                setTimeout(() => this.props.history.push('/etudiant'), 1000);\n            }\n            else {console.error(\"Error\");}\n        })\n        \n        }\n\n    render(){\n\n        return(\n                <div>\n                <NavigationBar/>\n                <br/>\n                <Jumbotron className=\"bg-dark text-white\">\n                    <h1><FontAwesomeIcon icon={faEdit} /> Modifier un étudiant</h1>\n                    <blockquote className= \"blockquote mb-0\">\n                        <p>Vous pouvez changer les informations que vous voulez et sauvegarder</p>\n                    </blockquote>\n\n                        <Card className={\"border border-dark bg-dark text-white\"}>\n\n                            <div style={{\"display\":this.state.showModifToast ? \"block\" : \"none\"}}>\n                            <ToastModif children = {{showModifToast:this.state.showModifToast, message:\"Etudiant modifié avec succès.\",type:\"success\"}}/> \n                            </div>\n\n                            <Form onSubmit={this.updateEtudiant} id=\"EtudiantFormId\">\n\n                            <Card.Body>\n                    \n                                <Form.Row>\n                                        <Form.Group as={Col} controlId=\"formGridNom\">\n                                        <Form.Label> Nom </Form.Label>\n                                        <Form.Control name=\"nom\" autoComplete=\"off\" required type=\"text\"\n                                        className={\"bg-dark text-white\"}\n                                        value = {this.state.nom} onChange = {this.etudiantChange} placeholder= \"Entrez Nom Etudiant\"/>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col} controlId=\"formGridPrenom\">\n                                        <Form.Label> Prenom </Form.Label>\n                                        <Form.Control name=\"prenom\" autoComplete=\"off\" required type=\"text\"\n                                        className={\"bg-dark text-white\"}\n                                        value = {this.state.prenom} onChange = {this.etudiantChange} placeholder= \"Entrez Prenom Etudiant\"/>\n                                        </Form.Group>\n                                    </Form.Row>\n\n                                    <Form.Row>\n                                        <Form.Group as={Col} controlId=\"formGridCne\">\n                                        <Form.Label> CNE </Form.Label>\n                                        <Form.Control name=\"cne\" autoComplete=\"off\" required type=\"text\"\n                                        className={\"bg-dark text-white\"}\n                                        value = {this.state.cne} onChange = {this.etudiantChange} placeholder= \"Entrez CNE Etudiant\"/>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col} controlId=\"formGridFiliere\">\n                                        <Form.Label> Filière </Form.Label>\n                                        <Form.Control name=\"filiere\" autoComplete=\"off\" required type=\"text\"\n                                        className={\"bg-dark text-white\"}\n                                        value = {this.state.filiere} onChange = {this.etudiantChange} placeholder= \"Entrez Filière Etudiant\"/>\n                                        </Form.Group>\n                                    </Form.Row>\n\n                                </Card.Body>\n\n                            <Card.Footer style={{\"textAlign\":\"center\"}}>\n                                <Button size=\"lm\" variant=\"primary\" type=\"submit\"> Modifier </Button>\n                            </Card.Footer>\n                        </Form>\n                        </Card>\n                    </Jumbotron>\n                </div>\n            \n);\n}\n}\nexport default  EtudiantModif;\n","import React, { Component } from \"react\";\nimport { ButtonGroup, Button, Card, Table ,Form, Col} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList, faEdit, faTrash,faPlus, faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport ToastSupp from \"../Toasts/ToastSupp\";\nimport { Link } from \"react-router-dom\";\nimport {Jumbotron} from 'react-bootstrap';\nimport ToastAjout from '../Toasts/ToastAjout';\nimport NavigationBar from '../Navigationbar';\nimport AuthService from \"../services/auth.service\";\n\n\nconst currUser  = AuthService.getCurrentUser();\nvar token = \"\";\nif(currUser) { token = currUser.data.jwttoken; }  \n\nclass GroupesList extends Component {\n\n  initialState = \n    {\n        Nom:' '\n    };\n\n  constructor(props) {\n    super(props);\n    this.state = { Groupes: [] , isToggleOn: false, currentuser: AuthService.getCurrentUser()};\n\n    this.groupeChange = this.groupeChange.bind(this);\n    this.ajoutGroupe = this.ajoutGroupe.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n\n    componentDidMount() \n    {   \n        console.log(token)\n\n        if(token !== \"\") \n        {\n        const api = `https://miolaproject.herokuapp.com/groupes`\n        axios.get(api, { headers: {\"Authorization\" : `Bearer ${token}`} })\n        .then(res => {\n            console.log(res.data);\n            this.setState({\n            Groupes: res.data,  \n            isLoaded : true,\n            redirectToReferrer: false})\n        })          \n    }\n    else { this.props.history.push('/login') }\n    }\n\n  deleteGroupe = (groupeId) => {\n    axios\n      .delete(\"https://miolaproject.herokuapp.com/groupes/\" + groupeId, { headers: {\"Authorization\" : `Bearer ${token}`} })\n      .then((response) => {\n        if (response.data != null) \n        {\n          this.setState({ showSuppToast: true });\n          setTimeout(() => this.setState({ showSuppToast: false }), 1000);\n          this.setState({ Groupes: this.state.Groupes.filter((groupe) => groupe.id !== groupeId)});\n        } \n        else { this.setState({ showSuppToast: false }); }\n      });\n  };\n\n  ajoutGroupe(event) {\n    event.preventDefault();\n\n    const groupe= {\n        nom:this.state.nom\n    }\n\n    axios.post(\"https://miolaproject.herokuapp.com/groupes\", groupe, { headers: {\"Authorization\" : `Bearer ${token}`} })\n    .then(response => {\n        if (response.data != null) \n        {\n            this.setState(this.initialState);\n            this.setState({\"showAddToast\":true});\n            setTimeout(() => this.setState({\"showAddToast\":false}), 1000);\n            setTimeout(() =>  window.location.reload(false), 1000);\n        }\n    })\n    }\n  \n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !this.state.isToggleOn\n    }));        \n  }\n\n  groupeChange(event) { this.setState ({ [event.target.name] : event.target.value }); }\n\n\n  render () {\n    return (\n\n        <div>\n\n            <NavigationBar/>\n                <br/>\n                \n            <Jumbotron className=\"bg-dark text-white\">\n\n                {/*  Titre + Button d'ajout d'un nouveau groupe */}\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-8\">\n                            <h1><FontAwesomeIcon icon={faList} /> Liste des groupes</h1>\n                            <blockquote className= \"blockquote mb-0\">\n                                <p>Vous trouverez la liste des groupes existants</p>\n                            </blockquote>\n                        </div>\n                        <div className=\"col-sm-4\">\n                        <Button size=\"lg\" variant=\"outline-success\" onClick={this.handleClick}> <FontAwesomeIcon icon={faPlus} /> Ajouter un groupe</Button> \n                        </div>\n                    </div>\n                </div>\n\n                {/*  Toast Suppression */}\n\n                <div style={{\"display\":this.state.showSuppToast ? \"block\" : \"none\"}}>\n                    <ToastSupp children = {{showSuppToast:this.state.showSuppToast, message:\"Groupe supprimé\",type:\"danger\"}}/> \n                </div>\n\n                {/*  Formulaire d'ajout d'un nouveau groupe */}\n\n                    <div className=\"FormAjout\" style={{\"display\":this.state.isToggleOn ? \"block\" : \"none\"}}>\n\n                    <Card className={\"border border-dark bg-dark text-white\"}>\n\n                        <Card.Header> Ajouter un groupe </Card.Header>\n\n                        <div style={{\"display\":this.state.showAddToast ? \"block\" : \"none\"}}>\n                        <ToastAjout children = {{showAddToast:this.state.showAddToast, message:\"Groupe ajouté avec succès.\",type:\"success\"}}/> \n                        </div>\n\n                        <Form onSubmit={this.ajoutGroupe} id=\"GroupeFormId\">\n\n                        <Card.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridNom\">\n                                <Form.Label> Nom </Form.Label>\n                                <Form.Control name=\"nom\" autoComplete=\"off\" required type=\"text\"\n                                className={\"bg-dark text-white\"}\n                                value = {this.state.nom} onChange = {this.groupeChange} placeholder= \"Entrez Nom Groupe\"/>\n                                </Form.Group>\n                            </Form.Row>\n                        </Card.Body>\n\n                        <Card.Footer style={{\"textAlign\":\"center\"}}>\n                            <Button size=\"lm\" variant=\"success\" type=\"submit\"> Ajouter </Button>\n                        </Card.Footer>\n                        </Form>\n                        </Card>\n\n                    </div>\n\n\n                {/*  Liste des encadrants existants dans la base de données */}\n\n                <Card className={\"border border-dark bg-dark text-white\"}> \n                    <Card.Body>\n                        <Table bordered hover striped variant=\"dark\">\n                            <thead> \n                                <tr><th>Nom</th></tr>\n                            </thead>\n\n                            <tbody>\n\n                            { \n                                /* If there is no encadrant, show \"Aucun encadrant existant\" */\n                                this.state.Groupes.length ===0 ? <tr align=\"center\"><td colSpan=\"6\">Aucun groupe existant.</td></tr> :\n                                \n                                /* else, we should fetch the data from the API */\n                                this.state.Groupes.map((groupe) => ( \n                                <tr key={groupe.id}>\n                                    <td>{groupe.nom}</td>\n                                    <td>\n                                            <ButtonGroup>\n                                            <Link to={{ pathname: `/groupe/ajoutetudiant/${groupe.id}`}} className=\"nav-link\">\n                                                <Button size=\"sm\" variant=\"outline-success\"><FontAwesomeIcon icon={faUserPlus}/> </Button>\n                                            </Link>\n                                            <Link to={{ pathname: `/groupe/modif/${groupe.id}`}} className=\"nav-link\">\n                                                <Button size=\"sm\" variant=\"outline-primary\"><FontAwesomeIcon icon={faEdit}/> </Button>\n                                            </Link>\n                                            <Button size=\"sm\" variant=\"outline-danger\" onClick={this.deleteGroupe.bind(this,groupe.id)}> <FontAwesomeIcon icon={faTrash} /> </Button> \n                                            </ButtonGroup>\n                                        </td>\n                                    </tr>\n                                ))\n                            }\n\n                            </tbody>\n\n                        </Table>\n                    </Card.Body>\n                </Card>\n\n                </Jumbotron>\n        </div>\n    \n    )}\n}\nexport default GroupesList;\n","import React, { Component } from 'react'\nimport { Card, Form, Col , Button} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport {  faEdit } from '@fortawesome/free-solid-svg-icons';\nimport {Jumbotron} from 'react-bootstrap';\nimport axios from 'axios'\nimport ToastModif from '../Toasts/ToastModif';\nimport NavigationBar from '../Navigationbar';\nimport AuthService from \"../services/auth.service\";\n\nconst currUser  = AuthService.getCurrentUser();\nvar token = \"\";\nif(currUser) { token = currUser.data.jwttoken; }  \n\nclass EncadrantModif extends Component {\n   \n    async componentDidMount() \n    {\n        if(token !== \"\")\n        {\n            const id = this.props.match.params.id;\n            const res = await axios.get('https://miolaproject.herokuapp.com/groupes/'+id, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            this.setState({\n                id: id,\n                nom : res.data.nom\n            });\n        }\n        else {this.props.history.push('/login') }\n    }\n\n\n    state = \n    {\n        id:'',\n        nom:''\n    };\n\n    constructor(props) \n    {\n        super(props);\n        this.state = { groupe: this.initialState };\n        this.groupeChange = this.groupeChange.bind(this);\n        this.updateGroupe = this.updateGroupe.bind(this)\n    }\n\n    groupeChange(event) \n    {\n        this.setState ({ [event.target.name] : event.target.value });\n    }\n\n    async updateGroupe(event) {\n        \n        event.preventDefault();\n\n        const id = this.props.match.params.id;\n        \n        const groupe= {\n            id:this.state.id,\n            nom:this.state.nom\n        }\n\n        await axios.patch(\"https://miolaproject.herokuapp.com/groupes/\"+id, groupe, { headers: {\"Authorization\" : `Bearer ${token}`} })\n        .then(response => {\n            if (response.data != null) \n            {\n                this.setState(this.initialState);\n                this.setState({\"showModifToast\":true});\n                setTimeout(() => this.setState({\"showModifToast\":false}), 1000);\n                setTimeout(() => this.props.history.push('/groupe'), 1000);\n            }\n            else {console.error(\"Error\");}\n        })\n        \n        }\n\n    render(){\n\n        return(\n            <div>\n            <NavigationBar/>\n             <br/>\n        \n            <Jumbotron className=\"bg-dark text-white\">\n            <h1><FontAwesomeIcon icon={faEdit} /> Modifier un groupe</h1>\n            <blockquote className= \"blockquote mb-0\">\n                <p>Vous pouvez changer les informations que vous voulez et sauvegarder</p>\n            </blockquote>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n\n                    <div style={{\"display\":this.state.showModifToast ? \"block\" : \"none\"}}>\n                    <ToastModif children = {{showModifToast:this.state.showModifToast, message:\"Groupe modifié avec succès.\",type:\"success\"}}/> \n                    </div>\n\n                    <Form onSubmit={this.updateGroupe} id=\"GroupeFormId\">\n                        <Card.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridNom\">\n                                <Form.Label> Nom </Form.Label>\n                                <Form.Control name=\"nom\" autoComplete=\"off\" required type=\"text\"\n                                className={\"bg-dark text-white\"}\n                                value = {this.state.nom} onChange = {this.groupeChange} placeholder= \"Entrez Nom Groupe\"/>\n                                </Form.Group>\n                            </Form.Row>\n                        </Card.Body>\n\n                        <Card.Footer style={{\"textAlign\":\"center\"}}>\n                            <Button size=\"lm\" variant=\"primary\" type=\"submit\"> Modifier </Button>\n                        </Card.Footer>\n                    </Form>\n                </Card>\n            </Jumbotron>\n            </div>\n            \n);\n}\n}\nexport default  EncadrantModif;","import React, { Component } from 'react'\nimport { Card, Form, Col , Button} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport {  faEdit, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport {Jumbotron} from 'react-bootstrap';\nimport Select from 'react-select'\nimport axios from 'axios'\nimport NavigationBar from '../Navigationbar';\nimport AuthService from \"../services/auth.service\";\n\n\nconst currUser  = AuthService.getCurrentUser();\nvar token = \"\";\nif(currUser) { token = currUser.data.jwttoken; }  \n\nclass addEtudiantGroupe extends Component {\n\n    componentDidMount() {\n      const id = this.props.match.params.id;\n\n      fetch(\"https://miolaproject.herokuapp.com/groupes/\"+id, { headers: {\"Authorization\" : `Bearer ${token}`} })\n          .then((response) => response.json())\n          .then((responseData) => {\n            this.setState({ groupe: responseData });\n            console.log(this.state.groupe)\n          })\n          .catch((err) => console.error(err));\n\n\n        fetch(\"https://miolaproject.herokuapp.com/etudiants\", { headers: {\"Authorization\" : `Bearer ${token}`} })\n          .then((response) => response.json())\n          .then((responseData) => {\n            this.setState({ Etudiants: responseData });\n          })\n          .catch((err) => console.error(err));\n\n\n      }\n\n      constructor(props) {\n        super(props);\n        this.state = { Etudiants: [] ,groupe:\"\", value:[] };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.ajoutEtudiantGroupe = this.ajoutEtudiantGroupe.bind(this);\n\n      }\n\n      ajoutEtudiantGroupe(event) {\n        event.preventDefault();\n        alert('Votre parfum favori est : ' + this.state.value);\n\n        }\n\n        handleChange(event) {\n          this.setState({value: event.target.value});\n        }\n      \n\n    render() {\n        return (\n          <div>\n <      NavigationBar/>\n             <br/>\n        <Jumbotron className=\"bg-dark text-white\">\n                <h1><FontAwesomeIcon icon={faUserPlus} /> Ajouter des étudiants à ce groupe</h1>\n                <blockquote className= \"blockquote mb-0\">\n                    <p>Vous pouvez choisir les étudiants que vous voulez pour les ajouter à ce groupe</p>\n                </blockquote>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Form onSubmit={this.ajoutEtudiantGroupe} id=\"GroupeFormId\">\n                        <Card.Body>\n                        <Form.Group controlId=\"ControlEtudiants\">\n                          <Form.Label>Liste des étudiants</Form.Label>\n                          <Form.Control name=\"listeEtudiants\" value={this.state.value} as=\"select\" onChange={this.handleChange}>\n                          {this.state.Etudiants.map((etudiant) => ( \n                            <option value={etudiant.id}>{etudiant.nom + \" \" +etudiant.prenom } </option>\n                                ))}\n                          </Form.Control>\n                        </Form.Group>\n                        </Card.Body>\n\n                        <Card.Footer style={{\"textAlign\":\"center\"}}>\n                            <Button size=\"lm\" variant=\"success\" type=\"submit\"> Valider </Button>\n                        </Card.Footer>\n                    </Form>\n                </Card>\n            </Jumbotron>\n          </div>\n            \n        )\n    }\n}\nexport default addEtudiantGroupe;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass PageNotFound extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Page Not Found 404</h2>\n                Click on this <Link to={\"/home\"}>link</Link> to go to the homepage.\n            </div>\n        )\n    }\n}\nexport default PageNotFound;\n","import React, { Component } from \"react\";\n\nclass dashboard extends Component {\n  handleLogout() {\n    localStorage.clear();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>WELCOME TO DASHBOARD</h1>\n\n        <a\n          href=\"/\"\n          onClick={this.handleLogout}\n          className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\"\n        >\n          <i className=\"ti-power-off mR-10\"></i>\n          <span style={{ color: \"white\" }}>Logout</span>\n        </a>\n      </div>\n    );\n  }\n}\nexport default dashboard;\n","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport {useHistory,Link} from 'react-router-dom'\n\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n    \nconst Login = (props) => {\n\n  const History = useHistory();\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(\n        () => {\n          History.push(\"/projet\");\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"col-md-4\" style={{\"display\":\"block\",\"margin\":\"auto\"}}>\n      <h2 style={{\"width\":\"90%\",\"display\":\"block\",\"margin\":\"auto\"}} >MiolaProjects Login</h2>\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleLogin} ref={form}>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input type=\"text\" className=\"form-control\" name=\"username\" autoFocus\n              value={username} onChange={onChangeUsername} validations={[required]}/>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Input type=\"password\" className=\"form-control\" name=\"password\"\n              value={password} onChange={onChangePassword} validations={[required]} />\n          </div>\n\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && ( <span className=\"spinner-border spinner-border-sm\"></span> )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n      <div>\n                <h2>Vous n'avez pas un compte?</h2>\n                 <Link to={\"/register\"}>Cliquez ici</Link> pour créer un compte.\n            </div>\n    </div>\n  );\n};\nexport default Login;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import axios from 'axios'\n\nconst VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MINLENGTHPASS = 'MINLENGTHPASS';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\nconst VALIDATOR_TYPE_PASSWORD_MATCH = 'MATCH';\nconst VALIDATOR_TYPE_USERNAME_MATCH = 'USERMATCH';\n\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MINLENGTHPASS = val => ({\n  type: VALIDATOR_TYPE_MINLENGTHPASS,\n  val: val\n});\nexport const VALIDATOR_USERMATCH = () => ({\n  type: VALIDATOR_TYPE_USERNAME_MATCH\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_PASSWORD_MATCH = val => ({\n  type: VALIDATOR_TYPE_PASSWORD_MATCH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\nvar pass = '';\nvar usernames = [];\nexport const validate = (value, validators) => {\n\n  axios.get(\"https://miolaproject.herokuapp.com/users\")\n  .then((response) => {\n    if (response.data != null) {\n      // console.log(\"my usernames \",response.data.username);\n      usernames = response.data;\n      // setShow(true);\n      // setTimeout(() => setShow(false), 1000);\n      // setEtudiants(Etudiants);\n\n    } else {\n      // setShow(false);\n    }\n  });\n\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTHPASS) {\n      pass = value;\n      console.log(\"passs \",pass);\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_USERNAME_MATCH) {\n      for(const username of usernames){\n        isValid = isValid && username.username !== value;\n    \n      }\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_PASSWORD_MATCH) {\n      if(validator.val !== null)\n      console.log(`validate pass  ${pass}`);\n      isValid = isValid && value === pass;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\nimport { validate } from \"../util/validators\";\n\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default function Input(props) {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const changeHander = (e) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: e.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const { id, onInput } = props;\n\n  const { isValid, value } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, onInput, value, isValid]);\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHander}\n        value={inputState.value}\n        onBlur={touchHandler}\n      ></input>\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        placeholder={props.placeholder}\n        onChange={changeHander}\n        onBlur={touchHandler}\n        value={inputState.value}\n      ></textarea>\n    );\n\n  return (\n    <div\n      className={`form-controll  ${\n        !inputState.isValid && inputState.isTouched && `form-controll--invalid`\n      }`}\n    >\n      <label htmlFor={props.id}> {props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {useHistory, Link} from 'react-router-dom'\nimport { useForm } from \"./form-hook\";\nimport AuthService from \"../services/auth.service\";\nimport Button from \"./Button\";\nimport Input from \"./Input\";\nimport ToastAjout from '../Toasts/ToastAjout'\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTHPASS,\n  VALIDATOR_PASSWORD_MATCH,\n  VALIDATOR_REQUIRE,\n  VALIDATOR_USERMATCH,\n} from \"../util/validators.js\";\nimport \"./Register.css\";\n\nexport default function NewPlace(props) {\n\n  const History = useHistory();\n  const [show, setShow] = useState(false);\n  const [formState, inputHandler] = useForm(\n    {\n      username: {\n        value: \"\",\n        isValid: false,\n      },\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n      rePassword: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const formSubmitHandler = (event) => {\n      event.preventDefault();\n      AuthService.register(formState.inputs.username.value, formState.inputs.password.value)\n                  .then(() => {\n                    setShow(true);\n                    setTimeout(() => setShow(false), 2000);\n                    setTimeout(() => History.push('/login'), 1500);\n                  });\n  };\n    useEffect(() => { getPassValue(); }, [formState]);\n\n    var pass = \"\";\n    \n    const getPassValue = () => {\n      console.log(\"use Effect pass check \");\n      if (document.getElementById(\"password\").value !== null) \n      {\n        pass = document.getElementById(\"password\").value;\n      } \n    };\n\n  return (\n    <div className=\"col-md-4\" style={{\"display\":\"block\",\"margin\":\"auto\"}}>\n      <div style={{\"display\": show ? \"block\" : \"none\"}}>\n            <ToastAjout children = {{show: show, message:\"Utilisateur ajoutée avec succès.\",type:\"success\"}}/> \n      </div>\n\n      <h2 style={{\"width\":\"100%\",\"display\":\"block\",\"margin\":\"auto\"}} >MiolaProjects Register</h2>\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n      <form className=\"register-form\" onSubmit={formSubmitHandler}>\n            \n        <Input\n          id=\"username\"\n          element=\"input\"\n          type=\"text\"\n          placeholder=\"Username\"\n          errorText=\"User already exist\"\n          validators={[VALIDATOR_USERMATCH()]}\n          onInput={inputHandler}\n        ></Input>\n        <Input\n          id=\"email\"\n          element=\"input\"\n          type=\"text\"\n          placeholder=\"Email\"\n          errorText=\"please enter a valide Email\"\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\n          onInput={inputHandler}\n        ></Input>\n\n        <Input\n          id=\"password\"\n          element=\"input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTHPASS(8)]}\n          errorText=\"Please enter a valid password (at least 8 characters).\"\n          onInput={inputHandler}\n        />\n\n        <Input\n          id=\"rePassword\"\n          placeholder=\"Confirm Password\"\n          element=\"input\"\n          type=\"password\"\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_PASSWORD_MATCH(pass)]}\n          errorText=\"Passwords didn't match\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          Register\n        </Button>\n      </form>\n      </div>\n      <div>\n                <h2>Vous avez déja un compte?</h2>\n                 <Link to={\"/login\"}>Cliquez ici</Link> pour vous connecter.\n            </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AuthService from \"../services/auth.service\";\n\nconst Profile = () => {\n  const currentUser = AuthService.getCurrentUser();\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>\n          <strong>{currentUser.username}</strong> Profile\n        </h3>\n      </header>\n      <p>\n        <strong>Token:</strong> {currentUser.accessToken} ...{\" \"}\n      </p>\n      <p>\n        <strong>Id:</strong> {currentUser.id}\n      </p>\n      <p>\n        <strong>Email:</strong> {currentUser.email}\n      </p>\n      <strong>Authorities:</strong>\n      <ul>\n        {currentUser.roles &&\n          currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default Profile;\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n  console.log(\"auth header \", user);\n  if (user && user.accessToken) {\n\n    return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    // return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  } else {\n    return {};\n  }\n}","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"https://miolaproject.herokuapp.com/api/\";\n\nconst getPublicContent = () => {\n  return axios.get(API_URL + \"users\");\n};\n\nconst getUserBoard = () => {\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\n};\n\nconst getModeratorBoard = () => {\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\n};\n\nconst getAdminBoard = () => {\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\n};\n\nexport default {\n  getPublicContent,\n  getUserBoard,\n  getModeratorBoard,\n  getAdminBoard,\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nconst BoardUser = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getUserBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardUser;\n","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nconst BoardModerator = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getModeratorBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardModerator;\n","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nconst BoardAdmin = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getAdminBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardAdmin;\n","import React, { Component } from \"react\";\nimport {BrowserRouter as Router, Switch, Route, } from 'react-router-dom';\nimport { Container, Row, Col} from 'react-bootstrap';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Home from './components/Home'\nimport ProjetList from './components/Projet/ProjetList'\nimport ProjetModif from './components/Projet/ProjetModif'\nimport EncadrantsList from './components/Encadrant/EncadrantsList';\nimport updateEncadrant from './components/Encadrant/updateEncadrant';\nimport EtudiantsList from './components/Etudiant/EtudiantList';\nimport updateEtudiant from './components/Etudiant/UpdateEtudiant';\nimport GroupesList from './components/Groupe/GroupesList';\nimport updateGroupe from './components/Groupe/updateGroupe';\nimport ajoutEtudiantGroupe from './components/Groupe/addEtudiantGroupe';\nimport PageNotFound from './components/PageNotFound'\n\nimport Dashboard from \"./components/authentication/Dashboard\";\nimport Login from \"./components/authentication/Login\";\nimport Register from \"./components/authentication/Register\";\nimport Profile from \"./components/authentication/Profile\";\nimport BoardUser from \"./components/authentication/BoardUser\";\nimport BoardModerator from \"./components/authentication/BoardModerator\";\nimport BoardAdmin from \"./components/authentication/BoardAdmin\";\n\n\nclass App extends Component {\n  render()\n  {\n    const marginTop = { marginTop:\"20px\"}\n    return (\n      <Router>\n          <Container>\n            <Row>\n              <Col lg={12} style={marginTop}>\n              <Switch>\n               \n                <Route path={[\"/\", \"/login\"]} exact component={Login}/>\n                \n                <Route path=\"/home\" exact component={Home}/>\n                \n                <Route path=\"/encadrant\" exact component={EncadrantsList}/>\n                <Route path=\"/encadrant/modif/:id\" exact component={updateEncadrant}/>\n\n                <Route path=\"/etudiant\" exact component={EtudiantsList}/>\n                <Route path=\"/etudiant/modif/:id\" exact component={updateEtudiant}/>\n                \n                <Route path=\"/projet\" exact component={ProjetList}/>\n                <Route path=\"/projet/modif/:id\" exact component={ProjetModif}/>\n\n                <Route path=\"/groupe\" exact component={GroupesList}/>\n                <Route path=\"/groupe/modif/:id\" exact component={updateGroupe}/>\n                <Route path=\"/groupe/ajoutetudiant/:id\" exact component={ajoutEtudiantGroupe}/>\n\n                <Route path=\"/dashboard\" exact component={Dashboard}/>\n\n                <Route path=\"/register\" exact component={Register} /> \n                <Route path=\"/profile\" exact component={Profile} /> \n\n                <Route path=\"/user\"exact component={BoardUser} /> \n                <Route path=\"/mod\" exact component={BoardModerator} /> \n                <Route path=\"/admin\" exact component={BoardAdmin}/>\n\n                <Route component={PageNotFound} />\n\n              </Switch>\n              </Col>\n            </Row>\n          </Container>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}